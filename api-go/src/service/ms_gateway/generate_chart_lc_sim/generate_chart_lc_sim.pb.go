// data-analysis-python\src\generate_chart_lc_sim\generate_chart_lc_sim.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.29.0--rc2
// source: generate_chart_lc_sim.proto

package generate_chart_lc_sim

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// リクエストメッセージを定義
type GenerateChartLCRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dates         []string  `protobuf:"bytes,1,rep,name=dates,proto3" json:"dates,omitempty"`                                         // 日付のリスト
	ClosePrices   []float64 `protobuf:"fixed64,2,rep,packed,name=close_prices,json=closePrices,proto3" json:"close_prices,omitempty"` // 株価のリスト
	PurchaseDate  string    `protobuf:"bytes,3,opt,name=purchase_date,json=purchaseDate,proto3" json:"purchase_date,omitempty"`       // 購入日
	PurchasePrice float64   `protobuf:"fixed64,4,opt,name=purchase_price,json=purchasePrice,proto3" json:"purchase_price,omitempty"`  // 購入価格
	EndDate       string    `protobuf:"bytes,5,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`                      // 売却日
	EndPrice      float64   `protobuf:"fixed64,6,opt,name=end_price,json=endPrice,proto3" json:"end_price,omitempty"`                 // 売却価格
}

func (x *GenerateChartLCRequest) Reset() {
	*x = GenerateChartLCRequest{}
	mi := &file_generate_chart_lc_sim_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateChartLCRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateChartLCRequest) ProtoMessage() {}

func (x *GenerateChartLCRequest) ProtoReflect() protoreflect.Message {
	mi := &file_generate_chart_lc_sim_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateChartLCRequest.ProtoReflect.Descriptor instead.
func (*GenerateChartLCRequest) Descriptor() ([]byte, []int) {
	return file_generate_chart_lc_sim_proto_rawDescGZIP(), []int{0}
}

func (x *GenerateChartLCRequest) GetDates() []string {
	if x != nil {
		return x.Dates
	}
	return nil
}

func (x *GenerateChartLCRequest) GetClosePrices() []float64 {
	if x != nil {
		return x.ClosePrices
	}
	return nil
}

func (x *GenerateChartLCRequest) GetPurchaseDate() string {
	if x != nil {
		return x.PurchaseDate
	}
	return ""
}

func (x *GenerateChartLCRequest) GetPurchasePrice() float64 {
	if x != nil {
		return x.PurchasePrice
	}
	return 0
}

func (x *GenerateChartLCRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *GenerateChartLCRequest) GetEndPrice() float64 {
	if x != nil {
		return x.EndPrice
	}
	return 0
}

// レスポンスメッセージを定義
type GenerateChartLCResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChartData string `protobuf:"bytes,1,opt,name=chart_data,json=chartData,proto3" json:"chart_data,omitempty"` // チャート可視化データ (Base64エンコード) を含むフィールド
	Success   bool   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`                     // プロット生成の成否
	Message   string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`                      // メッセージ（エラーメッセージ等）
}

func (x *GenerateChartLCResponse) Reset() {
	*x = GenerateChartLCResponse{}
	mi := &file_generate_chart_lc_sim_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateChartLCResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateChartLCResponse) ProtoMessage() {}

func (x *GenerateChartLCResponse) ProtoReflect() protoreflect.Message {
	mi := &file_generate_chart_lc_sim_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateChartLCResponse.ProtoReflect.Descriptor instead.
func (*GenerateChartLCResponse) Descriptor() ([]byte, []int) {
	return file_generate_chart_lc_sim_proto_rawDescGZIP(), []int{1}
}

func (x *GenerateChartLCResponse) GetChartData() string {
	if x != nil {
		return x.ChartData
	}
	return ""
}

func (x *GenerateChartLCResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GenerateChartLCResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_generate_chart_lc_sim_proto protoreflect.FileDescriptor

var file_generate_chart_lc_sim_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x74,
	0x5f, 0x6c, 0x63, 0x5f, 0x73, 0x69, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd5, 0x01,
	0x0a, 0x16, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72, 0x74, 0x4c,
	0x43, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x01, 0x52, 0x0b, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x73, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d,
	0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x65, 0x6e, 0x64,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x6c, 0x0a, 0x17, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x43, 0x68, 0x61, 0x72, 0x74, 0x4c, 0x43, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x32, 0x5c, 0x0a, 0x16, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x43,
	0x68, 0x61, 0x72, 0x74, 0x4c, 0x43, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x42, 0x0a,
	0x0d, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72, 0x74, 0x12, 0x17,
	0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72, 0x74, 0x4c, 0x43,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x43, 0x68, 0x61, 0x72, 0x74, 0x4c, 0x43, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x35, 0x5a, 0x33, 0x61, 0x70, 0x69, 0x2d, 0x67, 0x6f, 0x2f, 0x73, 0x72, 0x63, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x6d, 0x73, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x72,
	0x74, 0x5f, 0x6c, 0x63, 0x5f, 0x73, 0x69, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_generate_chart_lc_sim_proto_rawDescOnce sync.Once
	file_generate_chart_lc_sim_proto_rawDescData = file_generate_chart_lc_sim_proto_rawDesc
)

func file_generate_chart_lc_sim_proto_rawDescGZIP() []byte {
	file_generate_chart_lc_sim_proto_rawDescOnce.Do(func() {
		file_generate_chart_lc_sim_proto_rawDescData = protoimpl.X.CompressGZIP(file_generate_chart_lc_sim_proto_rawDescData)
	})
	return file_generate_chart_lc_sim_proto_rawDescData
}

var file_generate_chart_lc_sim_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_generate_chart_lc_sim_proto_goTypes = []any{
	(*GenerateChartLCRequest)(nil),  // 0: GenerateChartLCRequest
	(*GenerateChartLCResponse)(nil), // 1: GenerateChartLCResponse
}
var file_generate_chart_lc_sim_proto_depIdxs = []int32{
	0, // 0: GenerateChartLCService.GenerateChart:input_type -> GenerateChartLCRequest
	1, // 1: GenerateChartLCService.GenerateChart:output_type -> GenerateChartLCResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_generate_chart_lc_sim_proto_init() }
func file_generate_chart_lc_sim_proto_init() {
	if File_generate_chart_lc_sim_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_generate_chart_lc_sim_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_generate_chart_lc_sim_proto_goTypes,
		DependencyIndexes: file_generate_chart_lc_sim_proto_depIdxs,
		MessageInfos:      file_generate_chart_lc_sim_proto_msgTypes,
	}.Build()
	File_generate_chart_lc_sim_proto = out.File
	file_generate_chart_lc_sim_proto_rawDesc = nil
	file_generate_chart_lc_sim_proto_goTypes = nil
	file_generate_chart_lc_sim_proto_depIdxs = nil
}
