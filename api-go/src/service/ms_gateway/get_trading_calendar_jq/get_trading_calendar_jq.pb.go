// data-analysis-python\src\get_holiday_info\get_trading_calendar_jq.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.29.0--rc3
// source: get_trading_calendar_jq.proto

package get_trading_calendar_jq_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// リクエストメッセージを定義
type GetTradingCalendarJqRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromDate string `protobuf:"bytes,1,opt,name=from_date,json=fromDate,proto3" json:"from_date,omitempty"` // 取得開始日
	ToDate   string `protobuf:"bytes,2,opt,name=to_date,json=toDate,proto3" json:"to_date,omitempty"`       // 取得終了日
}

func (x *GetTradingCalendarJqRequest) Reset() {
	*x = GetTradingCalendarJqRequest{}
	mi := &file_get_trading_calendar_jq_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTradingCalendarJqRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTradingCalendarJqRequest) ProtoMessage() {}

func (x *GetTradingCalendarJqRequest) ProtoReflect() protoreflect.Message {
	mi := &file_get_trading_calendar_jq_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTradingCalendarJqRequest.ProtoReflect.Descriptor instead.
func (*GetTradingCalendarJqRequest) Descriptor() ([]byte, []int) {
	return file_get_trading_calendar_jq_proto_rawDescGZIP(), []int{0}
}

func (x *GetTradingCalendarJqRequest) GetFromDate() string {
	if x != nil {
		return x.FromDate
	}
	return ""
}

func (x *GetTradingCalendarJqRequest) GetToDate() string {
	if x != nil {
		return x.ToDate
	}
	return ""
}

// レスポンスメッセージを定義
type GetTradingCalendarJqResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TradingCalendar []*TradingCalendar `protobuf:"bytes,1,rep,name=trading_calendar,json=tradingCalendar,proto3" json:"trading_calendar,omitempty"`
}

func (x *GetTradingCalendarJqResponse) Reset() {
	*x = GetTradingCalendarJqResponse{}
	mi := &file_get_trading_calendar_jq_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTradingCalendarJqResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTradingCalendarJqResponse) ProtoMessage() {}

func (x *GetTradingCalendarJqResponse) ProtoReflect() protoreflect.Message {
	mi := &file_get_trading_calendar_jq_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTradingCalendarJqResponse.ProtoReflect.Descriptor instead.
func (*GetTradingCalendarJqResponse) Descriptor() ([]byte, []int) {
	return file_get_trading_calendar_jq_proto_rawDescGZIP(), []int{1}
}

func (x *GetTradingCalendarJqResponse) GetTradingCalendar() []*TradingCalendar {
	if x != nil {
		return x.TradingCalendar
	}
	return nil
}

// 取引カレンダーの詳細を定義
type TradingCalendar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date            string `protobuf:"bytes,1,opt,name=Date,proto3" json:"Date,omitempty"`                       // 日付
	HolidayDivision string `protobuf:"bytes,2,opt,name=HolidayDivision,proto3" json:"HolidayDivision,omitempty"` // 休日区分
}

func (x *TradingCalendar) Reset() {
	*x = TradingCalendar{}
	mi := &file_get_trading_calendar_jq_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TradingCalendar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradingCalendar) ProtoMessage() {}

func (x *TradingCalendar) ProtoReflect() protoreflect.Message {
	mi := &file_get_trading_calendar_jq_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradingCalendar.ProtoReflect.Descriptor instead.
func (*TradingCalendar) Descriptor() ([]byte, []int) {
	return file_get_trading_calendar_jq_proto_rawDescGZIP(), []int{2}
}

func (x *TradingCalendar) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *TradingCalendar) GetHolidayDivision() string {
	if x != nil {
		return x.HolidayDivision
	}
	return ""
}

var File_get_trading_calendar_jq_proto protoreflect.FileDescriptor

var file_get_trading_calendar_jq_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x61,
	0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x5f, 0x6a, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x53, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x6c,
	0x65, 0x6e, 0x64, 0x61, 0x72, 0x4a, 0x71, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74,
	0x6f, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f,
	0x44, 0x61, 0x74, 0x65, 0x22, 0x5b, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x4a, 0x71, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72,
	0x52, 0x0f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61,
	0x72, 0x22, 0x4f, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x6c, 0x65,
	0x6e, 0x64, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x44, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x48, 0x6f, 0x6c, 0x69,
	0x64, 0x61, 0x79, 0x44, 0x69, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x48, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x44, 0x69, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x32, 0x72, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x4a, 0x71, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x53, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x43,
	0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x4a, 0x71, 0x12, 0x1c, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x4a, 0x71,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x4a, 0x71, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x3d, 0x5a, 0x3b, 0x61, 0x70, 0x69, 0x2d, 0x67, 0x6f,
	0x2f, 0x73, 0x72, 0x63, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x6d, 0x73, 0x5f,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x63, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61, 0x72, 0x5f, 0x6a, 0x71, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_get_trading_calendar_jq_proto_rawDescOnce sync.Once
	file_get_trading_calendar_jq_proto_rawDescData = file_get_trading_calendar_jq_proto_rawDesc
)

func file_get_trading_calendar_jq_proto_rawDescGZIP() []byte {
	file_get_trading_calendar_jq_proto_rawDescOnce.Do(func() {
		file_get_trading_calendar_jq_proto_rawDescData = protoimpl.X.CompressGZIP(file_get_trading_calendar_jq_proto_rawDescData)
	})
	return file_get_trading_calendar_jq_proto_rawDescData
}

var file_get_trading_calendar_jq_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_get_trading_calendar_jq_proto_goTypes = []any{
	(*GetTradingCalendarJqRequest)(nil),  // 0: GetTradingCalendarJqRequest
	(*GetTradingCalendarJqResponse)(nil), // 1: GetTradingCalendarJqResponse
	(*TradingCalendar)(nil),              // 2: TradingCalendar
}
var file_get_trading_calendar_jq_proto_depIdxs = []int32{
	2, // 0: GetTradingCalendarJqResponse.trading_calendar:type_name -> TradingCalendar
	0, // 1: GetTradingCalendarJqService.GetTradingCalendarJq:input_type -> GetTradingCalendarJqRequest
	1, // 2: GetTradingCalendarJqService.GetTradingCalendarJq:output_type -> GetTradingCalendarJqResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_get_trading_calendar_jq_proto_init() }
func file_get_trading_calendar_jq_proto_init() {
	if File_get_trading_calendar_jq_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_get_trading_calendar_jq_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_get_trading_calendar_jq_proto_goTypes,
		DependencyIndexes: file_get_trading_calendar_jq_proto_depIdxs,
		MessageInfos:      file_get_trading_calendar_jq_proto_msgTypes,
	}.Build()
	File_get_trading_calendar_jq_proto = out.File
	file_get_trading_calendar_jq_proto_rawDesc = nil
	file_get_trading_calendar_jq_proto_goTypes = nil
	file_get_trading_calendar_jq_proto_depIdxs = nil
}
